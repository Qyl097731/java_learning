<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<mvc:annotation-driven />
	<mvc:default-servlet-handler />
	<context:component-scan base-package="com.nsec.controller" />
	<!-- 对静态资源文件的访问 restful -->
	<mvc:resources mapping="/public/**" location="/public/" />

	<!-- 访问拦截 -->
	<!--开发阶段先不验证，方便swagger接口测试，部署验证-->
<!--	<mvc:interceptors>-->
<!--		<mvc:interceptor>-->
<!--			<mvc:mapping path="/nsec/**" />-->
<!--			<bean class="com.nsec.interceptor.ShiroHandlerInterceptor" />-->
<!--		</mvc:interceptor>-->
<!--	</mvc:interceptors>-->

	<!-- 配置基于Session的处理,将提交上来的locale参数进行处理 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<!-- 该属性可以不用配置
        <property name="defaultLocale" value="ja"></property>-->
	</bean>

	<!-- 国际化请求拦截器处理 -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
	</mvc:interceptors>

	<!-- 默认的注解映射的支持,验证框架 -->
	<!--<mvc:annotation-driven validator="validator" conversion-service="conversion-service" />
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
		&lt;!&ndash;不设置则默认为classpath下的 ValidationMessages.properties &ndash;&gt;
		<property name="validationMessageSource" ref="validatemessageSource"/>
	</bean>
	<bean id="conversion-service" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />
	<bean id="validatemessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages"/>
		<property name="fileEncodings" value="utf-8"/>
		<property name="cacheSeconds" value="120"/>
	</bean>-->

	<!-- 配置SpringMVC的视图解析器 -->
	<bean
			class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
				  value="org.springframework.web.servlet.view.JstlView" />
		<property name="contentType" value="text/html" />
		<property name="prefix" value="/public/page/" />
		<property name="suffix" value=".html" />
	</bean>

	<!-- 开启shiro注解支持 -->
	<!-- 配置以下两个bean即可实现此功能， 开启Shiro的注解(如@RequiresRoles,@RequiresPermissions),需借助SpringAOP扫描使用Shiro注解的类,并在必要时进行安全逻辑验证 -->
	<bean
			class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
			depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean
			class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>



	<!-- 上传拦截，如最大上传值及最小上传值 -->
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
		<property name="defaultEncoding">
			<value>utf-8</value>
		</property>
	</bean>




</beans>
