# \u5E94\u7528\u540D\u79F0
spring.application.name=sharding-jdbc-demo
# \u5F00\u53D1\u73AF\u5883\u8BBE\u7F6E
spring.profiles.active=dev
# \u5185\u5B58\u6A21\u5F0F
spring.shardingsphere.mode.type=Memory

# \u914D\u7F6E\u771F\u5B9E\u6570\u636E\u6E90
spring.shardingsphere.datasource.names=master,slave1,slave2

# \u914D\u7F6E\u7B2C 1 \u4E2A\u6570\u636E\u6E90
spring.shardingsphere.datasource.master.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.master.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master.jdbc-url=jdbc:mysql://172.19.240.201:3306/db_test
spring.shardingsphere.datasource.master.username=root
spring.shardingsphere.datasource.master.password=123456

# \u914D\u7F6E\u7B2C 2 \u4E2A\u6570\u636E\u6E90
spring.shardingsphere.datasource.slave1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave1.jdbc-url=jdbc:mysql://172.19.240.201:3307/db_test
spring.shardingsphere.datasource.slave1.username=root
spring.shardingsphere.datasource.slave1.password=123456

# \u914D\u7F6E\u7B2C 3 \u4E2A\u6570\u636E\u6E90
spring.shardingsphere.datasource.slave2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave2.jdbc-url=jdbc:mysql://172.19.240.201:3308/db_test
spring.shardingsphere.datasource.slave2.username=root
spring.shardingsphere.datasource.slave2.password=123456

# \u8BFB\u5199\u5206\u79BB\u7C7B\u578B\uFF0C\u5982: Static\uFF0CDynamic
spring.shardingsphere.rules.readwrite-splitting.data-sources.myds.type=Static
# \u5199\u6570\u636E\u6E90\u540D\u79F0
spring.shardingsphere.rules.readwrite-splitting.data-sources.myds.props.write-data-source-name=master
# \u8BFB\u6570\u636E\u6E90\u540D\u79F0\uFF0C\u591A\u4E2A\u4ECE\u6570\u636E\u6E90\u7528\u9017\u53F7\u5206\u9694
spring.shardingsphere.rules.readwrite-splitting.data-sources.myds.props.read-data-source-names=slave1,slave2

# \u8D1F\u8F7D\u5747\u8861\u7B97\u6CD5\u540D\u79F0
spring.shardingsphere.rules.readwrite-splitting.data-sources.myds.load-balancer-name=alg_round

# \u8D1F\u8F7D\u5747\u8861\u7B97\u6CD5\u914D\u7F6E
# \u8D1F\u8F7D\u5747\u8861\u7B97\u6CD5\u7C7B\u578B
spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_round.type=ROUND_ROBIN
#spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_random.type=RANDOM
#spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_weight.type=WEIGHT
#spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_weight.props.slave1=1
#spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_weight.props.slave2=2

# \u6253\u5370SQl
spring.shardingsphere.props.sql-show=true
